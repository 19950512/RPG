#!/bin/bash
# Script de teste de conex√£o e sincroniza√ß√£o com o servidor
# Este √© um exemplo - copie para test_connection.sh e ajuste conforme seu ambiente

echo "üîó Testando conex√£o e sincroniza√ß√£o com o servidor via gRPC..."
echo ""
echo "üìã Diferen√ßas entre ambientes:"
echo "   üè≠ PRODU√á√ÉO (docker-compose.yml):"
echo "      - Porta gRPC: 5008"
echo "      - HTTPS na porta 5001"
echo "      - Container: gameserver"
echo "   "
echo "   üõ†Ô∏è  DESENVOLVIMENTO (docker-compose.dev.yml):"
echo "      - Porta gRPC: 5008"
echo "      - HTTP nas portas 5001 e 5002"
echo "      - Container: gameserver-dev"
echo "      - Hot reload habilitado"
echo ""

# Teste usando grpcurl (que deveria estar no container)
echo "1. Tentando conectar ao servidor gRPC..."
docker exec gameserver-dev grpcurl -plaintext localhost:5008 list 2>/dev/null || \
docker exec gameserver grpcurl -plaintext localhost:5008 list 2>/dev/null || \
echo "‚ùå N√£o foi poss√≠vel conectar via grpcurl (container n√£o encontrado ou grpcurl n√£o instalado)"

echo ""
echo "2. Verificando se o servidor est√° respondendo..."
curl -s -I http://localhost:5009/health | head -1 2>/dev/null || echo "‚ùå Servidor HTTP n√£o est√° respondendo"

echo ""
echo "3. Verificando dados atuais no banco..."
docker-compose exec postgres psql -U gameuser -d gameserver -c "SELECT \"Name\", \"Level\", \"Experience\", \"PositionX\", \"PositionY\", \"IsOnline\", \"LastUpdate\" FROM \"Players\" ORDER BY \"LastUpdate\" DESC LIMIT 5;" 2>/dev/null || \
echo "‚ùå N√£o foi poss√≠vel conectar ao banco"

echo ""
echo "üéØ Para testar a sincroniza√ß√£o:"
echo "   1. Configurar ambiente: source dev.env && source .venv/bin/activate"
echo "   2. Rodar o cliente: cd src && python -m GameClient.main"
echo "   3. Fazer login e entrar no mundo" 
echo "   4. Mover o personagem ou usar a tecla X para ganhar XP"
echo "   5. Fechar o jogo (janela ou Ctrl+C) para testar o logout autom√°tico"
echo "   6. As informa√ß√µes devem ser salvas automaticamente a cada 5 segundos"
echo ""
echo "üîß Para alternar entre ambientes:"
echo "   - DEV: docker-compose -f docker-compose.dev.yml up -d"
echo "   - PROD: docker-compose up -d"
echo ""
