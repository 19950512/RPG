events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    upstream gameserver_backend {
        server gameserver:5001;
        # Add more servers here for load balancing
        # server gameserver2:5001;
        # server gameserver3:5001;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    server {
        listen 80;
        server_name _;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name _;

        # SSL Configuration
        ssl_certificate /etc/nginx/certs/gameserver.crt;
        ssl_certificate_key /etc/nginx/certs/gameserver.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn addr 10;

        # gRPC proxy configuration
        location / {
            grpc_pass grpc://gameserver_backend;
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            grpc_read_timeout 300s;
            grpc_send_timeout 300s;
            
            # Buffer settings for high throughput
            grpc_buffer_size 128k;
        }

        # Health check endpoint
        location /health {
            proxy_pass https://gameserver_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

# Stream block for TCP/UDP load balancing (if needed for game protocols)
stream {
    upstream game_tcp_backend {
        server gameserver:5001;
    }

    server {
        listen 5001 ssl;
        ssl_certificate /etc/nginx/certs/gameserver.crt;
        ssl_certificate_key /etc/nginx/certs/gameserver.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        proxy_pass game_tcp_backend;
        proxy_timeout 1s;
        proxy_responses 1;
    }
}
